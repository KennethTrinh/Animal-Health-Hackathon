{"version":3,"sources":["logo.svg","form-components.js","validators.js","account-details.js","Form.js","form-data.js","personal-details.js","payment-details.js","card-selector.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","FormInput","fieldRenderProps","validationMessage","touched","label","id","valid","disabled","hint","type","optional","others","Object","objectWithoutProperties","showValidationMessage","showHint","hintId","concat","errorId","react","FieldWrapper","Label","editorId","editorValid","editorDisabled","className","Input","assign","ariaDescribedBy","Hint","Error","FormMaskedTextBox","MaskedTextBox","emailRegex","RegExp","ccardRegex","cvcRegex","requiredValidator","value","AccountDetails","getter","Field","key","name","component","validator","length","test","labelId","Upload","autoUpload","showActionButtons","multiple","files","onAdd","event","onChange","newState","onRemove","ariaLabelledBy","stepPages","Date","wrapperStyle","editorRef","React","style","AutoComplete","ref","data","layout","visited","modified","RadioGroup","TextArea","props","_React$useState","_React$useState2","slicedToArray","cardHover","setCardHover","onMouseEnter","currentTarget","getAttribute","onMouseLeave","filter","filterHover","cardStyle","cursor","backgroundSize","backgroundRepeat","backgroundPosition","display","width","height","border","visaStyle","objectSpread","backgroundImage","masterCardStyle","paypalStyle","inputStyles","visibility","position","checked","htmlFor","justifyContent","marginRight","mask","DateInput","MultiStepForm","step","setStep","_React$useState3","_React$useState4","formState","setFormState","_React$useState5","isValid","undefined","_React$useState6","steps","setSteps","lastStepIndex","isLastStep","isPreviousStepsValid","slice","findIndex","currentStep","onStepSubmit","values","currentSteps","map","index","Math","min","alert","JSON","stringify","onPrevClick","preventDefault","max","flexDirection","Stepper","items","Form","initialValues","onSubmitClick","render","formRenderProps","alignSelf","FormElement","marginTop","alignContent","Button","onClick","themeColor","onSubmit","Home","react_default","a","createElement","src_Form","App","Fragment","react_router_dist","path","element","src_Home","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","react_router_dom_dist","src_App"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uhBCQ3BC,mDAAY,SAAAC,GAAoB,IAEzCC,EAUED,EAVFC,kBACAC,EASEF,EATFE,QACAC,EAQEH,EARFG,MACAC,EAOEJ,EAPFI,GACAC,EAMEL,EANFK,MACAC,EAKEN,EALFM,SACAC,EAIEP,EAJFO,KACAC,EAGER,EAHFQ,KACAC,EAEET,EAFFS,SACGC,EAAMC,OAAAC,EAAA,EAAAD,CACPX,EAAgB,0FACda,EAAwBX,GAAWD,EACnCa,GAAYD,GAAyBN,EACrCQ,EAASD,EAAQ,GAAAE,OAAMZ,EAAE,SAAU,GACnCa,EAAUJ,EAAqB,GAAAG,OAAMZ,EAAE,UAAW,GACxD,OAAOc,EAAA,cAACC,EAAA,EAAY,KACdD,EAAA,cAACE,EAAA,EAAK,CAACC,SAAUjB,EAAIkB,YAAajB,EAAOkB,eAAgBjB,EAAUG,SAAUA,GAAWN,GACxFe,EAAA,qBAAKM,UAAW,qBACdN,EAAA,cAACO,EAAA,EAAKd,OAAAe,OAAA,CAACrB,MAAOA,EAAOG,KAAMA,EAAMJ,GAAIA,EAAIE,SAAUA,EAAUqB,gBAAe,GAAAX,OAAKD,EAAM,KAAAC,OAAIC,IAAeP,IACzGI,GAAYI,EAAA,cAACU,EAAA,EAAI,CAACxB,GAAIW,GAASR,GAC/BM,GAAyBK,EAAA,cAACW,EAAA,EAAK,CAACzB,GAAIa,GAAUhB,OAuG5C6B,EAAoB,SAAA9B,GAAoB,IAEjDC,EAQED,EARFC,kBACAC,EAOEF,EAPFE,QACAC,EAMEH,EANFG,MACAC,EAKEJ,EALFI,GACAC,EAIEL,EAJFK,MACAE,EAGEP,EAHFO,KACAE,EAEET,EAFFS,SACGC,EAAMC,OAAAC,EAAA,EAAAD,CACPX,EAAgB,wEACda,EAAwBX,GAAWD,EACnCa,GAAYD,GAAyBN,EACrCQ,EAASD,EAAQ,GAAAE,OAAMZ,EAAE,SAAU,GACnCa,EAAUJ,EAAqB,GAAAG,OAAMZ,EAAE,UAAW,GACxD,OAAOc,EAAA,cAACC,EAAA,EAAY,KACdD,EAAA,cAACE,EAAA,EAAK,CAACC,SAAUjB,EAAIkB,YAAajB,EAAOI,SAAUA,GAAWN,GAC9De,EAAA,qBAAKM,UAAW,qBACdN,EAAA,cAACa,EAAA,EAAapB,OAAAe,OAAA,CAACC,gBAAe,GAAAX,OAAKD,EAAM,KAAAC,OAAIC,GAAWZ,MAAOA,EAAOD,GAAIA,GAAQM,IACjFI,GAAYI,EAAA,cAACU,EAAA,EAAI,CAACxB,GAAIW,GAASR,GAC/BM,GAAyBK,EAAA,cAACW,EAAA,EAAK,CAACzB,GAAIa,GAAUhB,eCxJnD+B,EAAa,IAAIC,OAAO,gBAExBC,GADa,IAAID,OAAO,iBACX,IAAIA,OAAO,cACxBE,EAAW,IAAIF,OAAO,YAYfG,EAAoB,SAAAC,GAAK,OAAIA,EAAQ,GAAK,kCCZ1CC,GDeUC,YAAO,YACVA,YAAO,SChBGrB,EAAA,yBAC1BA,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,WAAYrC,GAAI,WAAYsC,KAAM,WAAYvC,MAAO,WAAYwC,UAAW5C,EAAW6C,UDGtE,SAAAP,GAAK,OAAKA,EAAkCA,EAAMQ,OAAS,EAAI,kDAAoD,GAAjG,2BCF/C3B,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,QAASrC,GAAI,QAASsC,KAAM,QAASvC,MAAO,QAASI,KAAM,2CAA4CC,KAAM,QAASmC,UAAW5C,EAAW6C,UDA9H,SAAAP,GAAK,OAAKA,EAAqCL,EAAWc,KAAKT,GAAS,GAAK,kCAA3D,8BCC5CnB,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,WAAYrC,GAAI,WAAYsC,KAAM,WAAYvC,MAAO,WAAYK,KAAM,WAAYmC,UAAW5C,EAAW6C,UDUxF,SAAAP,GAAK,OAAIA,GAASA,EAAMQ,OAAS,EAAI,GAAK,0CCTvE3B,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,SAAUrC,GAAI,SAAUsC,KAAM,SAAUvC,MAAO,SAAUM,UAAU,EAAMF,KAAM,mCAAoCoC,UF2RzG,SAAA3C,GAAoB,IAE1CqC,EAQErC,EARFqC,MACAjC,EAOEJ,EAPFI,GACAK,EAMET,EANFS,SACAN,EAKEH,EALFG,MACAI,EAIEP,EAJFO,KACAN,EAGED,EAHFC,kBACAC,EAEEF,EAFFE,QACGQ,EAAMC,OAAAC,EAAA,EAAAD,CACPX,EAAgB,wEACda,EAAwBX,GAAWD,EACnCa,GAAYD,GAAyBN,EACrCQ,EAASD,EAAQ,GAAAE,OAAMZ,EAAE,SAAU,GACnCa,EAAUJ,EAAqB,GAAAG,OAAMZ,EAAE,UAAW,GAClD2C,EAAU5C,EAAK,GAAAa,OAAMZ,EAAE,UAAW,GAWxC,OAAOc,EAAA,cAACC,EAAA,EAAY,KACdD,EAAA,cAACE,EAAA,EAAK,CAAChB,GAAI2C,EAAS1B,SAAUjB,EAAIK,SAAUA,GACzCN,GAEHe,EAAA,cAAC8B,EAAA,EAAMrC,OAAAe,OAAA,CAACtB,GAAIA,EAAI6C,YAAY,EAAOC,mBAAmB,EAAOC,UAAU,EAAOC,MAAOf,EAAOgB,MAd1E,SAAAC,GACtBtD,EAAiBuD,SAAS,CACxBlB,MAAOiB,EAAME,YAYyGC,SATlG,SAAAH,GACtBtD,EAAiBuD,SAAS,CACxBlB,MAAOiB,EAAME,YAOoI7B,gBAAe,GAAAX,OAAKD,EAAM,KAAAC,OAAIC,GAAWyC,eAAgBX,GAAarC,IACpNI,GAAYI,EAAA,cAACU,EAAA,EAAI,CAACxB,GAAIW,GAASR,GAC/BM,GAAyBK,EAAA,cAACW,EAAA,EAAK,CAACzB,GAAIa,GAAUhB,SG3TjD0D,GCsCU,IAAIC,KAAK,4BAUT,IAAIA,KAAK,4BAUT,IAAIA,KAAK,4BAUT,IAAIA,KAAK,4BAUT,IAAIA,KAAK,4BAUT,IAAIA,KAAK,4BAUT,IAAIA,KAAK,4BAUT,IAAIA,KAAK,4BAUT,IAAIA,KAAK,4BAUT,IAAIA,KAAK,4BDhIP,CAACtB,EEHYpB,EAAA,yBAC3BA,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,WAAYrC,GAAI,WAAYsC,KAAM,WAAYvC,MAAO,YAAawC,UAAW5C,EAAW6C,UJC3E,SAAAP,GAAK,OAAKA,EAAkCA,EAAMQ,OAAS,EAAI,kDAAoD,GAAjG,2BIA3C3B,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,kBAAmBrC,GAAI,kBAAmBsC,KAAM,kBAAmBvC,MAAO,UAAWI,KAAM,gCAAiCoC,UL0V5G,SAAA3C,GAAoB,IAEhDC,EASED,EATFC,kBACAC,EAQEF,EARFE,QACAC,EAOEH,EAPFG,MACAC,EAMEJ,EANFI,GACAC,EAKEL,EALFK,MACAC,EAIEN,EAJFM,SACAC,EAGEP,EAHFO,KACAsD,EAEE7D,EAFF6D,aACGnD,EAAMC,OAAAC,EAAA,EAAAD,CACPX,EAAgB,uFACd8D,EAAYC,SAAa,MACzBlD,EAAwBX,GAAWD,EACnCa,GAAYD,GAAyBN,EACrCQ,EAASD,EAAQ,GAAAE,OAAMZ,EAAE,SAAU,GACnCa,EAAUJ,EAAqB,GAAAG,OAAMZ,EAAE,UAAW,GAClD2C,EAAU5C,EAAK,GAAAa,OAAMZ,EAAE,UAAW,GACxC,OAAOc,EAAA,cAACC,EAAA,EAAY,CAAC6C,MAAOH,GACtB3C,EAAA,cAACE,EAAA,EAAK,CAAChB,GAAI2C,EAASe,UAAWA,EAAWzC,SAAUjB,EAAIkB,YAAajB,EAAOkB,eAAgBjB,GACzFH,GAEHe,EAAA,cAAC+C,EAAA,EAAYtD,OAAAe,OAAA,CAACgC,eAAgBX,EAASpB,gBAAe,GAAAX,OAAKD,EAAM,KAAAC,OAAIC,GAAWiD,IAAKJ,EAAWzD,MAAOA,EAAOD,GAAIA,EAAIE,SAAUA,GAAcI,IAC7II,GAAYI,EAAA,cAACU,EAAA,EAAI,CAACxB,GAAIW,GAASR,GAC/BM,GAAyBK,EAAA,cAACW,EAAA,EAAK,CAACzB,GAAIa,GAAUhB,KKlXkHkE,KDG9I,CAAC,UAAW,UAAW,UAAW,UAAW,aAAc,UAAW,UAAW,uBAAwB,WAAY,UAAW,SAAU,iBAAkB,UAAW,UAAW,UAAW,SAAU,UAAW,UAAW,SAAU,UAAW,UAAW,UAAW,QAAS,SAAU,SAAU,gBAAiB,YAAa,aAAc,YAAa,QAAS,UAAW,SAAU,aAAc,cAAe,SAAU,SAAU,WAAY,UAAW,SAAU,aAAc,SAAU,WAAY,WAAY,QAAS,SAAU,cAAe,SAAU,UAAW,iBAAkB,gBCHxavB,UAAWR,IACjMlB,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,SAAUrC,GAAI,SAAUsC,KAAM,SAAUvC,MAAO,SAAUiE,OAAQ,aAAczB,UL0BjE,SAAA3C,GAAoB,IAE9CC,EAUED,EAVFC,kBACAC,EASEF,EATFE,QACAE,EAQEJ,EARFI,GACAD,EAOEH,EAPFG,MACAE,EAMEL,EANFK,MACAC,EAKEN,EALFM,SACAC,EAIEP,EAJFO,KAGGG,GACDV,EAHFqE,QAGErE,EAFFsE,SACS3D,OAAAC,EAAA,EAAAD,CACPX,EAAgB,8FACd8D,EAAYC,SAAa,MACzBlD,EAAwBX,GAAWD,EACnCa,GAAYD,GAAyBN,EACrCQ,EAASD,EAAQ,GAAAE,OAAMZ,EAAE,SAAU,GACnCa,EAAUJ,EAAqB,GAAAG,OAAMZ,EAAE,UAAW,GAClD2C,EAAU5C,EAAK,GAAAa,OAAMZ,EAAE,UAAW,GACxC,OAAOc,EAAA,cAACC,EAAA,EAAY,KACdD,EAAA,cAACE,EAAA,EAAK,CAAChB,GAAI2C,EAASe,UAAWA,EAAWzC,SAAUjB,EAAIkB,YAAajB,EAAOkB,eAAgBjB,GAAWH,GACvGe,EAAA,cAACqD,EAAA,EAAU5D,OAAAe,OAAA,CAACC,gBAAe,GAAAX,OAAKD,EAAM,KAAAC,OAAIC,GAAWyC,eAAgBX,EAAS1C,MAAOA,EAAOC,SAAUA,EAAU4D,IAAKJ,GAAepD,IACnII,GAAYI,EAAA,cAACU,EAAA,EAAI,CAACxB,GAAIW,GAASR,GAC/BM,GAAyBK,EAAA,cAACW,EAAA,EAAK,CAACzB,GAAIa,GAAUhB,KKjDmEkE,KDRnG,CAAC,CACpBhE,MAAO,OACPkC,MAAO,QACN,CACDlC,MAAO,SACPkC,MAAO,UACN,CACDlC,MAAO,QACPkC,MAAO,UCA8HO,UAAWR,IAChJlB,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,QAASrC,GAAI,QAASsC,KAAM,QAASvC,MAAO,QAASM,UAAU,EAAMkC,ULoJzD,SAAA3C,GAAoB,IAE5CC,EASED,EATFC,kBACAC,EAQEF,EARFE,QACAC,EAOEH,EAPFG,MACAC,EAMEJ,EANFI,GACAC,EAKEL,EALFK,MACAE,EAIEP,EAJFO,KACAD,EAGEN,EAHFM,SACAG,EAEET,EAFFS,SACGC,EAAMC,OAAAC,EAAA,EAAAD,CACPX,EAAgB,mFACda,EAAwBX,GAAWD,EACnCa,GAAYD,GAAyBN,EACrCQ,EAASD,EAAQ,GAAAE,OAAMZ,EAAE,SAAU,GACnCa,EAAUJ,EAAqB,GAAAG,OAAMZ,EAAE,UAAW,GACxD,OAAOc,EAAA,cAACC,EAAA,EAAY,KACdD,EAAA,cAACE,EAAA,EAAK,CAACC,SAAUjB,EAAIkB,YAAajB,EAAOI,SAAUA,GAAWN,GAC9De,EAAA,cAACsD,EAAA,EAAQ7D,OAAAe,OAAA,CAACrB,MAAOA,EAAOD,GAAIA,EAAIE,SAAUA,EAAUqB,gBAAe,GAAAX,OAAKD,EAAM,KAAAC,OAAIC,IAAeP,IAChGI,GAAYI,EAAA,cAACU,EAAA,EAAI,CAACxB,GAAIW,GAASR,GAC/BM,GAAyBK,EAAA,cAACW,EAAA,EAAK,CAACzB,GAAIa,GAAUhB,QM5KzBiB,EAAA,yBAC1BA,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,WAAYC,KAAM,WAAYC,UCJlB,SAAA8B,GAAS,IAEjCpC,EAEEoC,EAFFpC,MACAhC,EACEoE,EADFpE,MAAKqE,EAE2BX,WAAe,IAAGY,EAAAhE,OAAAiE,EAAA,EAAAjE,CAAA+D,EAAA,GAA7CG,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBI,EAAehB,cAAkB,SAAAT,GAAK,OAAIwB,EAAaxB,EAAM0B,cAAcC,aAAa,SAAS,CAACH,IAClGI,EAAenB,cAAkB,kBAAMe,EAAa,KAAK,CAACA,IAC1DvB,EAAWQ,cAAkB,SAAAT,GAAK,OAAImB,EAAMlB,SAAS,CACzDlB,MAAOiB,EAAM0B,cAAc3C,SACzB,CAACoC,IACCU,EAAS,2CACTC,EAAc,4CACdC,EAAY,CAChBC,OAAQ,UACRC,eAAgB,OAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,QAAS,eACTC,MAAO,IACPC,OAAQ,GACRC,OAAQ,aAEJC,EAASnF,OAAAoF,EAAA,EAAApF,CAAA,CACbqF,gBAAiB,2DACjBb,OAAkB,SAAV9C,EAAmB,OAAuB,SAAdwC,EAAuBO,EAAcD,GACtEE,GAECY,EAAetF,OAAAoF,EAAA,EAAApF,CAAA,CACnBqF,gBAAiB,2DACjBb,OAAkB,eAAV9C,EAAyB,OAAuB,eAAdwC,EAA6BO,EAAcD,GAClFE,GAECa,EAAWvF,OAAAoF,EAAA,EAAApF,CAAA,CACfqF,gBAAiB,2DACjBb,OAAkB,WAAV9C,EAAqB,OAAuB,WAAdwC,EAAyBO,EAAcD,GAC1EE,GAECc,EAAc,CAClBC,WAAY,SACZC,SAAU,YAEZ,OAAOnF,EAAA,cAACC,EAAA,EAAY,KACdD,EAAA,uBAAOM,UAAS,UAAAR,OAAYX,EAAQ,GAAK,kBAAmB,gBAC5Da,EAAA,oBAAIM,UAAU,kCACZN,EAAA,oBAAIM,UAAU,gBACZN,EAAA,uBAAOqC,SAAUA,EAAU+C,QAAmB,SAAVjE,EAAkBjC,GAAG,OAAOI,KAAK,QAAQ6B,MAAM,OAAOK,KAAK,cAAcsB,MAAOmC,IACpHjF,EAAA,uBAAO6D,aAAcA,EAAcG,aAAcA,EAAcqB,QAAQ,OAAOvC,MAAO8B,KAGvF5E,EAAA,oBAAIM,UAAU,gBACZN,EAAA,uBAAOqC,SAAUA,EAAU+C,QAAmB,eAAVjE,EAAwBjC,GAAG,aAAaI,KAAK,QAAQ6B,MAAM,aAAaK,KAAK,cAAcsB,MAAOmC,IACtIjF,EAAA,uBAAO6D,aAAcA,EAAcG,aAAcA,EAAcqB,QAAQ,aAAavC,MAAOiC,KAG7F/E,EAAA,oBAAIM,UAAU,gBACZN,EAAA,uBAAOqC,SAAUA,EAAU+C,QAAmB,WAAVjE,EAAoBjC,GAAG,SAASI,KAAK,QAAQ6B,MAAM,SAASK,KAAK,cAAcsB,MAAOmC,IAC1HjF,EAAA,uBAAO6D,aAAcA,EAAcG,aAAcA,EAAcqB,QAAQ,SAASvC,MAAOkC,QDrD5BtD,UAAWR,IAC9ElB,EAAA,qBAAK8C,MAAO,CACZ0B,QAAS,OACTc,eAAgB,kBAEdtF,EAAA,qBAAK8C,MAAO,CACZ2B,MAAO,MACPc,YAAa,SAEXvF,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,aAAcrC,GAAI,aAAcsC,KAAM,aAAcvC,MAAO,cAAeI,KAAM,gCAAiCmG,KAAM,sBAAuB/D,UAAWb,EAAmBc,ULLnK,SAAAP,GAAK,OAAKA,EAA6CH,EAAWY,KAAKT,GAAS,GAAK,yCAAnE,uCKOzCnB,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,MAAOrC,GAAI,MAAOsC,KAAM,MAAOvC,MAAO,aAAcI,KAAM,kDAAmDmG,KAAM,MAAO/D,UAAWb,EAAmBc,ULN9I,SAAAP,GAAK,OAAKA,EAAkCF,EAASW,KAAKT,IAA2B,IAAjBA,EAAMQ,OAAe,GAAK,+BAA5E,4BKQ1C3B,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,aAAcrC,GAAI,aAAcsC,KAAM,aAAcvC,MAAO,kBAAmBwC,UNukBjE,SAAA3C,GAAoB,IAE7CC,EASED,EATFC,kBACAC,EAQEF,EARFE,QACAC,EAOEH,EAPFG,MACAC,EAMEJ,EANFI,GACAC,EAKEL,EALFK,MACAC,EAIEN,EAJFM,SACAC,EAGEP,EAHFO,KACAsD,EAEE7D,EAFF6D,aACGnD,EAAMC,OAAAC,EAAA,EAAAD,CACPX,EAAgB,uFACda,EAAwBX,GAAWD,EACnCa,GAAYD,GAAyBN,EACrCQ,EAASD,EAAQ,GAAAE,OAAMZ,EAAE,SAAU,GACnCa,EAAUJ,EAAqB,GAAAG,OAAMZ,EAAE,UAAW,GAClD2C,EAAU5C,EAAK,GAAAa,OAAMZ,EAAE,UAAW,GACxC,OAAOc,EAAA,cAACC,EAAA,EAAY,CAAC6C,MAAOH,GACtB3C,EAAA,cAACE,EAAA,EAAK,CAAChB,GAAI2C,EAAS1B,SAAUjB,EAAIkB,YAAajB,EAAOkB,eAAgBjB,GACnEH,GAEHe,EAAA,cAACyF,EAAA,EAAShG,OAAAe,OAAA,CAACgC,eAAgBX,EAASpB,gBAAe,GAAAX,OAAKD,EAAM,KAAAC,OAAIC,GAAWZ,MAAOA,EAAOD,GAAIA,EAAIE,SAAUA,GAAcI,IAC1HI,GAAYI,EAAA,cAACU,EAAA,EAAI,CAACxB,GAAIW,GAASR,GAC/BM,GAAyBK,EAAA,cAACW,EAAA,EAAK,CAACzB,GAAIa,GAAUhB,KM9lBiE2C,UAAWR,IAC/HlB,EAAA,cAACsB,EAAA,EAAK,CAACC,IAAK,aAAcrC,GAAI,aAAcsC,KAAM,aAAcvC,MAAO,mBAAoBwC,UAAW5C,EAAW6C,UAAWR,OHiEjHwE,EA3EO,WAAM,IAAAlC,EACFX,WAAe,GAAEY,EAAAhE,OAAAiE,EAAA,EAAAjE,CAAA+D,EAAA,GAAlCmC,EAAIlC,EAAA,GAAEmC,EAAOnC,EAAA,GAAAoC,EACchD,WAAe,IAAGiD,EAAArG,OAAAiE,EAAA,EAAAjE,CAAAoG,EAAA,GAA7CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACJpD,WAAe,CAAC,CACxC5D,MAAO,kBACPiH,aAASC,GACR,CACDlH,MAAO,mBACPiH,aAASC,GACR,CACDlH,MAAO,kBACPiH,aAASC,KACRC,EAAA3G,OAAAiE,EAAA,EAAAjE,CAAAwG,EAAA,GATII,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAUhBG,EAAgBF,EAAM1E,OAAS,EAC/B6E,EAAaD,IAAkBZ,EAC/Bc,GAAyG,IAAlFJ,EAAMK,MAAM,EAAGf,GAAMgB,UAAU,SAAAC,GAAW,OAA4B,IAAxBA,EAAYV,UACjFW,EAAehE,cAAkB,SAAAT,GAAS,IAE5C8D,EAEE9D,EAFF8D,QACAY,EACE1E,EADF0E,OAEIC,EAAeV,EAAMW,IAAI,SAACJ,EAAaK,GAAK,OAAAxH,OAAAoF,EAAA,EAAApF,CAAA,GAC7CmH,EAAW,CACdV,QAASe,IAAUtB,EAAOO,EAAUU,EAAYV,YAElDI,EAASS,GACTnB,EAAQ,kBAAMsB,KAAKC,IAAIxB,EAAO,EAAGY,KACjCP,EAAac,GACTN,GAAcC,GAAwBP,GACxCkB,MAAMC,KAAKC,UAAUR,KAEtB,CAACT,EAAOG,EAAYC,EAAsBd,EAAMY,IAC7CgB,EAAc1E,cAAkB,SAAAT,GACpCA,EAAMoF,iBACN5B,EAAQ,kBAAMsB,KAAKO,IAAI9B,EAAO,EAAG,MAChC,CAACA,EAAMC,IACV,OAAO5F,EAAA,qBAAK8C,MAAO,CACjB0B,QAAS,OACTkD,cAAe,SACfpC,eAAgB,WAEZtF,EAAA,cAAC2H,EAAA,EAAO,CAACxG,MAAOwE,EAAMiC,MAAOvB,IAC7BrG,EAAA,cAAC6H,EAAA,EAAI,CAACC,cAAe/B,EAAWgC,cAAelB,EAAcmB,OAAQ,SAAAC,GAAe,OAAIjI,EAAA,qBAAK8C,MAAO,CACtGoF,UAAW,WAEHlI,EAAA,cAACmI,EAAA,EAAW,CAACrF,MAAO,CAC1B2B,MAAO,MAEEhC,EAAUkD,GACX3F,EAAA,sBAAM8C,MAAO,CACnBsF,UAAW,QACV9H,UAAW,qBACNN,EAAA,qBAAK8C,MAAO,CAClBwC,eAAgB,gBAChB+C,aAAc,UACb/H,UAAW,4FACJN,EAAA,sBAAM8C,MAAO,CACnBoF,UAAW,WACV,QAAMvC,EAAO,EAAE,SACV3F,EAAA,yBACY,IAAT2F,EAAa3F,EAAA,cAACsI,EAAA,EAAM,CAACxF,MAAO,CACnCyC,YAAa,QACZgD,QAAShB,GAAa,iBAEiBpB,EAClCnG,EAAA,cAACsI,EAAA,EAAM,CAACE,WAAY,UAAWpJ,WAAUoH,IAAcC,EAA8B8B,QAASN,EAAgBQ,UAC3GjC,EAAa,SAAW,iBKpDhCkC,MAlBf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKvI,UAAU,OACbqI,EAAAC,EAAAC,cAAA,UAAK,4BASLF,EAAAC,EAAAC,cAACC,EAAa,eCALC,MAXf,WACE,OACEJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAM,KACLN,EAAAC,EAAAC,cAACI,EAAA,EAAK,CAACC,KAAK,IAAIC,QAASR,EAAAC,EAAAC,cAACO,EAAI,WCCvBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC5K,EAAA6K,EAAA,GAAAC,KAAA9K,EAAA+K,KAAA,WAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,eCADW,IAASC,WAAWC,SAASC,eAAe,SACpDpC,OAIHW,EAAAC,EAAAC,cAACwB,EAAA,EAAM,KACH1B,EAAAC,EAAAC,cAACyB,EAAG,QAOVjB","file":"static/js/main.5be4003d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import * as React from 'react';\nimport { FieldWrapper } from '@progress/kendo-react-form';\nimport { Input, MaskedTextBox, NumericTextBox, Checkbox, ColorPicker, Switch, RadioGroup, Slider, SliderLabel, RangeSlider, TextArea, Rating } from '@progress/kendo-react-inputs';\nimport { DatePicker, TimePicker, DateTimePicker, DateRangePicker, DateInput } from '@progress/kendo-react-dateinputs';\nimport { Label, Error, Hint, FloatingLabel } from '@progress/kendo-react-labels';\nimport { Upload } from '@progress/kendo-react-upload';\nimport { DropDownList, AutoComplete, MultiSelect, ComboBox, MultiColumnComboBox, DropDownTree } from '@progress/kendo-react-dropdowns';\nimport { processTreeData, expandedState } from './tree-data-operations';\nexport const FormInput = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    type,\n    optional,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  return <FieldWrapper>\n        <Label editorId={id} editorValid={valid} editorDisabled={disabled} optional={optional}>{label}</Label>\n        <div className={'k-form-field-wrap'}>\n          <Input valid={valid} type={type} id={id} disabled={disabled} ariaDescribedBy={`${hintId} ${errorId}`} {...others} />\n          {showHint && <Hint id={hintId}>{hint}</Hint>}\n          {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n        </div>\n      </FieldWrapper>;\n};\nexport const FormRadioGroup = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    id,\n    label,\n    valid,\n    disabled,\n    hint,\n    visited,\n    modified,\n    ...others\n  } = fieldRenderProps;\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled}>{label}</Label>\n        <RadioGroup ariaDescribedBy={`${hintId} ${errorId}`} ariaLabelledBy={labelId} valid={valid} disabled={disabled} ref={editorRef} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormNumericTextBox = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  return <FieldWrapper>\n        <Label editorId={id} editorValid={valid} editorDisabled={disabled}>{label}</Label>\n        <NumericTextBox ariaDescribedBy={`${hintId} ${errorId}`} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormCheckbox = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    id,\n    valid,\n    disabled,\n    hint,\n    optional,\n    label,\n    visited,\n    modified,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  return <FieldWrapper>\n        <Checkbox ariaDescribedBy={`${hintId} ${errorId}`} label={label} labelOptional={optional} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormSwitch = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    optional,\n    id,\n    valid,\n    disabled,\n    hint,\n    ...others\n  } = fieldRenderProps;\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled} optional={optional}>\n          {label}\n        </Label>\n        <Switch ref={editorRef} ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormMaskedTextBox = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    hint,\n    optional,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  return <FieldWrapper>\n        <Label editorId={id} editorValid={valid} optional={optional}>{label}</Label>\n        <div className={'k-form-field-wrap'}>\n          <MaskedTextBox ariaDescribedBy={`${hintId} ${errorId}`} valid={valid} id={id} {...others} />\n          {showHint && <Hint id={hintId}>{hint}</Hint>}\n          {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n        </div>\n      </FieldWrapper>;\n};\nexport const FormTextArea = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    hint,\n    disabled,\n    optional,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  return <FieldWrapper>\n        <Label editorId={id} editorValid={valid} optional={optional}>{label}</Label>\n        <TextArea valid={valid} id={id} disabled={disabled} ariaDescribedBy={`${hintId} ${errorId}`} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormColorPicker = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    ...others\n  } = fieldRenderProps;\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <ColorPicker ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} ref={editorRef} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormSlider = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    data,\n    min,\n    max,\n    ...others\n  } = fieldRenderProps;\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <Slider ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} ref={editorRef} valid={valid} id={id} disabled={disabled} min={min} max={max} {...others}>\n          {data.map(value => <SliderLabel title={value} key={value} position={value}>\n                        {value.toString()}\n                      </SliderLabel>)}\n        </Slider>\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormRangeSlider = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    hint,\n    disabled,\n    data,\n    min,\n    max,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  return <FieldWrapper>\n        <Label editorId={id} editorValid={valid}>{label}</Label>\n        <RangeSlider valid={valid} id={id} disabled={disabled} ariaDescribedBy={`${hintId} ${errorId}`} min={min} max={max} {...others}>{data.map(value => {\n        return <SliderLabel key={value} position={value}>\n                        {value.toString()}\n                      </SliderLabel>;\n      })}\n        </RangeSlider>\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormRating = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    hint,\n    disabled,\n    optional,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  return <FieldWrapper>\n        <Label editorId={id} editorValid={valid} optional={optional}>{label}</Label>\n        <Rating valid={valid} id={id} disabled={disabled} ariaDescribedBy={`${hintId} ${errorId}`} {...others} />\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormUpload = fieldRenderProps => {\n  const {\n    value,\n    id,\n    optional,\n    label,\n    hint,\n    validationMessage,\n    touched,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  const onChangeHandler = event => {\n    fieldRenderProps.onChange({\n      value: event.newState\n    });\n  };\n  const onRemoveHandler = event => {\n    fieldRenderProps.onChange({\n      value: event.newState\n    });\n  };\n  return <FieldWrapper>\n        <Label id={labelId} editorId={id} optional={optional}>\n          {label}\n        </Label>\n        <Upload id={id} autoUpload={false} showActionButtons={false} multiple={false} files={value} onAdd={onChangeHandler} onRemove={onRemoveHandler} ariaDescribedBy={`${hintId} ${errorId}`} ariaLabelledBy={labelId} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormDropDownList = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    ...others\n  } = fieldRenderProps;\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <DropDownList ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} ref={editorRef} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormAutoComplete = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    ...others\n  } = fieldRenderProps;\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <AutoComplete ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} ref={editorRef} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormComboBox = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    ...others\n  } = fieldRenderProps;\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <ComboBox ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} ref={editorRef} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormMultiColumnComboBox = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    ...others\n  } = fieldRenderProps;\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  const columns = [{\n    field: 'id',\n    header: <span>header</span>,\n    width: '100px'\n  }, {\n    field: 'name',\n    header: 'Name',\n    width: '300px'\n  }, {\n    field: 'position',\n    header: 'Position',\n    width: '300px'\n  }];\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <MultiColumnComboBox ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} ref={editorRef} valid={valid} id={id} disabled={disabled} columns={columns} textField={'name'} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormMultiSelect = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    ...others\n  } = fieldRenderProps;\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : \"\";\n  const errorId = showValidationMessage ? `${id}_error` : \"\";\n  const labelId = label ? `${id}_label` : \"\";\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <MultiSelect ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} ref={editorRef} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormDropDownTree = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    data,\n    ...others\n  } = fieldRenderProps;\n  const {\n    value,\n    selectField,\n    expandField,\n    dataItemKey,\n    filter\n  } = others;\n  const [expanded, setExpanded] = React.useState([data[0][dataItemKey]]);\n  const treeData = React.useMemo(() => processTreeData(data, {\n    expanded,\n    value,\n    filter\n  }, {\n    selectField,\n    expandField,\n    dataItemKey,\n    subItemsField: 'items'\n  }), [data, expanded, value, filter, selectField, expandField, dataItemKey]);\n  const onExpandChange = React.useCallback(event => setExpanded(expandedState(event.item, dataItemKey, expanded)), [expanded, dataItemKey]);\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : \"\";\n  const errorId = showValidationMessage ? `${id}_error` : \"\";\n  const labelId = label ? `${id}_label` : \"\";\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <DropDownTree ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} ref={editorRef} valid={valid} id={id} disabled={disabled} data={treeData} onExpandChange={onExpandChange} dataItemKey={others.dataItemKey} textField={others.textField} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormDatePicker = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    hintDirection,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <div className={'k-form-field-wrap'}>\n          <DatePicker ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} valid={valid} id={id} disabled={disabled} {...others} />\n          {showHint && <Hint id={hintId} direction={hintDirection}>{hint}</Hint>}\n          {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n        </div>\n      </FieldWrapper>;\n};\nexport const FormDateTimePicker = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <DateTimePicker ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormTimePicker = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <TimePicker ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormDateInput = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <DateInput ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormDateRangePicker = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    wrapperStyle,\n    ...others\n  } = fieldRenderProps;\n  const editorRef = React.useRef(null);\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  const labelId = label ? `${id}_label` : '';\n  return <FieldWrapper style={wrapperStyle}>\n        <Label id={labelId} editorRef={editorRef} editorId={id} editorValid={valid} editorDisabled={disabled}>\n          {label}\n        </Label>\n        <DateRangePicker ariaLabelledBy={labelId} ariaDescribedBy={`${hintId} ${errorId}`} ref={editorRef} valid={valid} id={id} disabled={disabled} {...others} />\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};\nexport const FormFloatingNumericTextBox = fieldRenderProps => {\n  const {\n    validationMessage,\n    touched,\n    label,\n    id,\n    valid,\n    disabled,\n    hint,\n    optional,\n    value,\n    ...others\n  } = fieldRenderProps;\n  const showValidationMessage = touched && validationMessage;\n  const showHint = !showValidationMessage && hint;\n  const hintId = showHint ? `${id}_hint` : '';\n  const errorId = showValidationMessage ? `${id}_error` : '';\n  return <FieldWrapper>\n        <FloatingLabel optional={optional} editorValue={value} editorId={id} editorValid={valid} editorDisabled={disabled} label={label}>\n          <NumericTextBox ariaDescribedBy={`${hintId} ${errorId}`} value={value} valid={valid} id={id} disabled={disabled} {...others} />\n        </FloatingLabel>\n        {showHint && <Hint id={hintId}>{hint}</Hint>}\n        {showValidationMessage && <Error id={errorId}>{validationMessage}</Error>}\n      </FieldWrapper>;\n};","import { getter } from '@progress/kendo-react-common';\nconst emailRegex = new RegExp(/\\S+@\\S+\\.\\S+/);\nconst phoneRegex = new RegExp(/^[0-9 ()+-]+$/);\nconst ccardRegex = new RegExp(/^[0-9-]+$/);\nconst cvcRegex = new RegExp(/^[0-9]+$/);\nexport const termsValidator = value => value ? \"\" : \"It's required to agree with Terms and Conditions.\";\nexport const emailValidator = value => !value ? \"Email field is required.\" : emailRegex.test(value) ? \"\" : \"Email is not in a valid format.\";\nexport const nameValidator = value => !value ? \"Full Name is required\" : value.length < 7 ? \"Full Name should be at least 7 characters long.\" : \"\";\nexport const userNameValidator = value => !value ? \"User Name is required\" : value.length < 5 ? \"User name should be at least 5 characters long.\" : \"\";\nexport const phoneValidator = value => !value ? \"Phone number is required.\" : phoneRegex.test(value) ? \"\" : \"Not a valid phone number.\";\nexport const cardValidator = value => !value ? \"Credit card number is required. \" : ccardRegex.test(value) ? \"\" : \"Not a valid credit card number format.\";\nexport const cvcValidator = value => !value ? \"CVC code is required,\" : cvcRegex.test(value) || value.length !== 3 ? \"\" : \"Not a valid CVC code format.\";\nexport const guestsValidator = value => !value ? \"Number of guests is required\" : value < 5 ? \"\" : \"Maximum 5 guests\";\nexport const nightsValidator = value => value ? \"\" : \"Number of Nights is required.\";\nexport const arrivalDateValidator = value => value ? \"\" : \"Arrival Date is required.\";\nexport const colorValidator = value => value ? \"\" : \"Color is required.\";\nexport const requiredValidator = value => value ? \"\" : \"Error: This field is required.\";\nexport const passwordValidator = value => value && value.length > 8 ? '' : 'Password must be at least 8 symbols.';\nexport const addressValidator = value => value ? \"\" : \"Address is required.\";\nconst userNameGetter = getter('username');\nconst emailGetter = getter('email');\nexport const formValidator = values => {\n  const userName = userNameGetter(values);\n  const emailValue = emailGetter(values);\n  if (userName && emailValue && emailRegex.test(emailValue)) {\n    return {};\n  }\n  return {\n    VALIDATION_SUMMARY: 'Please fill in the following fields.',\n    ['username']: !userName ? 'User Name is required.' : '',\n    ['email']: emailValue && emailRegex.test(emailValue) ? '' : 'Email is required and should be in a valid format.'\n  };\n};","import * as React from 'react';\nimport { Field } from '@progress/kendo-react-form';\nimport { FormInput, FormUpload } from './form-components';\nimport { userNameValidator, emailValidator, passwordValidator } from './validators';\nexport const AccountDetails = <div>\n    <Field key={'userName'} id={'userName'} name={'userName'} label={'Username'} component={FormInput} validator={userNameValidator} />\n    <Field key={'email'} id={'email'} name={'email'} label={'Email'} hint={'Hint: Enter your personal email address.'} type={'email'} component={FormInput} validator={emailValidator} />\n    <Field key={'password'} id={'password'} name={'password'} label={'Password'} type={'password'} component={FormInput} validator={passwordValidator} />\n    <Field key={'avatar'} id={'avatar'} name={'avatar'} label={'Avatar'} optional={true} hint={'Hint: Upload your avatar picture'} component={FormUpload} />\n  </div>;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Form, FormElement } from '@progress/kendo-react-form';\nimport { Button } from '@progress/kendo-react-buttons';\nimport { Stepper } from '@progress/kendo-react-layout';\nimport { AccountDetails } from './account-details';\nimport { PersonalDetails } from './personal-details';\nimport { PaymentDetails } from './payment-details';\nconst stepPages = [AccountDetails, PersonalDetails, PaymentDetails];\n\nconst MultiStepForm = () => {\n  const [step, setStep] = React.useState(0);\n  const [formState, setFormState] = React.useState({});\n  const [steps, setSteps] = React.useState([{\n    label: 'Account Details',\n    isValid: undefined\n  }, {\n    label: 'Personal Details',\n    isValid: undefined\n  }, {\n    label: 'Payment Details',\n    isValid: undefined\n  }]);\n  const lastStepIndex = steps.length - 1;\n  const isLastStep = lastStepIndex === step;\n  const isPreviousStepsValid = steps.slice(0, step).findIndex(currentStep => currentStep.isValid === false) === -1;\n  const onStepSubmit = React.useCallback(event => {\n    const {\n      isValid,\n      values\n    } = event;\n    const currentSteps = steps.map((currentStep, index) => ({\n      ...currentStep,\n      isValid: index === step ? isValid : currentStep.isValid\n    }));\n    setSteps(currentSteps);\n    setStep(() => Math.min(step + 1, lastStepIndex));\n    setFormState(values);\n    if (isLastStep && isPreviousStepsValid && isValid) {\n      alert(JSON.stringify(values));\n    }\n  }, [steps, isLastStep, isPreviousStepsValid, step, lastStepIndex]);\n  const onPrevClick = React.useCallback(event => {\n    event.preventDefault();\n    setStep(() => Math.max(step - 1, 0));\n  }, [step, setStep]);\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  }}>\n        <Stepper value={step} items={steps} />\n        <Form initialValues={formState} onSubmitClick={onStepSubmit} render={formRenderProps => <div style={{\n      alignSelf: 'center'\n    }}>\n              <FormElement style={{\n        width: 480\n      }}>\n                {stepPages[step]}\n                <span style={{\n          marginTop: '40px'\n        }} className={'k-form-separator'} />\n                <div style={{\n          justifyContent: 'space-between',\n          alignContent: 'center'\n        }} className={'k-form-buttons k-button k-button-md k-rounded-md k-button-solid k-button-solid-bases-end'}>\n                  <span style={{\n            alignSelf: 'center'\n          }}>Step {step + 1} of 3</span>\n                  <div>\n                    {step !== 0 ? <Button style={{\n              marginRight: '16px'\n            }} onClick={onPrevClick}>\n                                            Previous\n                                          </Button> : undefined}\n                    <Button themeColor={'primary'} disabled={isLastStep ? !isPreviousStepsValid : false} onClick={formRenderProps.onSubmit}>\n                      {isLastStep ? 'Submit' : 'Next'}\n                    </Button>\n                  </div>\n                </div>\n              </FormElement>\n            </div>} />\n      </div>;\n};\n\nexport default MultiStepForm;","export const genders = [{\n    label: 'Male',\n    value: 'male'\n  }, {\n    label: 'Female',\n    value: 'female'\n  }, {\n    label: 'Other',\n    value: 'other'\n  }];\n  export const countries = ['Albania', 'Andorra', 'Armenia', 'Austria', 'Azerbaijan', 'Belarus', 'Belgium', 'Bosnia & Herzegovina', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Georgia', 'Germany', 'Greece', 'Hungary', 'Iceland', 'Ireland', 'Italy', 'Kosovo', 'Latvia', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Macedonia', 'Malta', 'Moldova', 'Monaco', 'Montenegro', 'Netherlands', 'Norway', 'Poland', 'Portugal', 'Romania', 'Russia', 'San Marino', 'Serbia', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'Switzerland', 'Turkey', 'Ukraine', 'United Kingdom', 'Vatican City'];\n  export const sizes = ['X-Small', 'Small', 'Medium', 'Large', 'X-Large', '2X-Large'];\n  export const sports = ['Baseball', 'Basketball', 'Cricket', 'Field Hockey', 'Football', 'Table Tennis', 'Tennis', 'Volleyball'];\n  export const equipment = [{\n    text: 'Furniture',\n    id: 1,\n    items: [{\n      text: 'Tables & Chairs',\n      id: 2\n    }, {\n      text: 'Sofas',\n      id: 3\n    }, {\n      text: 'Occasional Furniture',\n      id: 4\n    }]\n  }, {\n    text: 'Decor',\n    id: 5,\n    items: [{\n      text: 'Bed Linen',\n      id: 6\n    }, {\n      text: 'Curtains & Blinds',\n      id: 7\n    }, {\n      text: 'Carpets',\n      id: 8\n    }]\n  }];\n  export const employees = [{\n    \"id\": 1,\n    \"name\": \"Daryl Sweeney\",\n    \"reportsTo\": null,\n    \"phone\": \"(555) 924-9726\",\n    \"extension\": 8253,\n    \"hireDate\": new Date(\"2012-02-07T20:00:00.000Z\"),\n    \"fullTime\": true,\n    \"position\": \"CEO\",\n    \"timeInPosition\": 2\n  }, {\n    \"id\": 2,\n    \"name\": \"Guy Wooten\",\n    \"reportsTo\": 1,\n    \"phone\": \"(438) 738-4935\",\n    \"extension\": 1155,\n    \"hireDate\": new Date(\"2010-03-03T20:00:00.000Z\"),\n    \"fullTime\": true,\n    \"position\": \"Chief Technical Officer\",\n    \"timeInPosition\": 1\n  }, {\n    \"id\": 3,\n    \"name\": \"Priscilla Frank\",\n    \"reportsTo\": 1,\n    \"phone\": \"(278) 927-2684\",\n    \"extension\": 4183,\n    \"hireDate\": new Date(\"2014-11-30T00:00:00.000Z\"),\n    \"fullTime\": true,\n    \"position\": \"Chief Product Officer\",\n    \"timeInPosition\": 2\n  }, {\n    \"id\": 4,\n    \"name\": \"Ursula Holmes\",\n    \"reportsTo\": 3,\n    \"phone\": \"(302) 760-2034\",\n    \"extension\": 2226,\n    \"hireDate\": new Date(\"2011-06-06T00:00:00.000Z\"),\n    \"fullTime\": true,\n    \"position\": \"EVP, Product Strategy\",\n    \"timeInPosition\": 4\n  }, {\n    \"id\": 5,\n    \"name\": \"Anika Vega\",\n    \"reportsTo\": 1,\n    \"phone\": \"(910) 714-1802\",\n    \"extension\": 6353,\n    \"hireDate\": new Date(\"2010-02-25T00:00:00.000Z\"),\n    \"fullTime\": true,\n    \"position\": \"Chief Process Officer\",\n    \"timeInPosition\": 5\n  }, {\n    \"id\": 6,\n    \"name\": \"Moses Duncan\",\n    \"reportsTo\": 64,\n    \"phone\": \"(421) 611-4814\",\n    \"extension\": 669,\n    \"hireDate\": new Date(\"2010-05-24T00:00:00.000Z\"),\n    \"fullTime\": true,\n    \"position\": \"Software Developer\",\n    \"timeInPosition\": 6\n  }, {\n    \"id\": 7,\n    \"name\": \"Nevada Hart\",\n    \"reportsTo\": 1,\n    \"phone\": \"(254) 220-1576\",\n    \"extension\": 6649,\n    \"hireDate\": new Date(\"2015-08-17T00:00:00.000Z\"),\n    \"fullTime\": true,\n    \"position\": \"Chief Financial Officer\",\n    \"timeInPosition\": 6\n  }, {\n    \"id\": 8,\n    \"name\": \"Hunter Fry\",\n    \"reportsTo\": 1,\n    \"phone\": \"(766) 358-9858\",\n    \"extension\": 3741,\n    \"hireDate\": new Date(\"2011-02-12T00:00:00.000Z\"),\n    \"fullTime\": false,\n    \"position\": \"General Counsel\",\n    \"timeInPosition\": 3\n  }, {\n    \"id\": 9,\n    \"name\": \"Kuame Carrillo\",\n    \"reportsTo\": 8,\n    \"phone\": \"(192) 383-1305\",\n    \"extension\": 9228,\n    \"hireDate\": new Date(\"2011-02-22T00:00:00.000Z\"),\n    \"fullTime\": true,\n    \"position\": \"Associate General Councel\",\n    \"timeInPosition\": 0\n  }, {\n    \"id\": 10,\n    \"name\": \"Vernon Ballard\",\n    \"reportsTo\": 5,\n    \"phone\": \"(702) 185-8890\",\n    \"extension\": 9242,\n    \"hireDate\": new Date(\"2015-06-26T00:00:00.000Z\"),\n    \"fullTime\": true,\n    \"position\": \"Director Facilities\",\n    \"timeInPosition\": 2\n  }];","import * as React from 'react';\nimport { Field } from '@progress/kendo-react-form';\nimport { FormInput, FormAutoComplete, FormRadioGroup, FormTextArea } from './form-components';\nimport { nameValidator, requiredValidator } from './validators';\nimport { countries, genders } from './form-data';\nexport const PersonalDetails = <div>\n    <Field key={'fullName'} id={'fullName'} name={'fullName'} label={'Full Name'} component={FormInput} validator={nameValidator} />\n    <Field key={'countryselected'} id={'countryselected'} name={'countryselected'} label={'Country'} hint={'Hint: Only European countries'} component={FormAutoComplete} data={countries} validator={requiredValidator} />\n    <Field key={'gender'} id={'gender'} name={'gender'} label={'Gender'} layout={'horizontal'} component={FormRadioGroup} data={genders} validator={requiredValidator} />\n    <Field key={'about'} id={'about'} name={'about'} label={'About'} optional={true} component={FormTextArea} />\n  </div>;","import * as React from 'react';\nimport { Field } from '@progress/kendo-react-form';\nimport { CardSelector } from './card-selector';\nimport { FormInput, FormMaskedTextBox, FormDateInput } from './form-components';\nimport { requiredValidator, cardValidator, cvcValidator } from './validators';\nexport const PaymentDetails = <div>\n    <Field key={'cardType'} name={'cardType'} component={CardSelector} validator={requiredValidator} />\n    <div style={{\n    display: 'flex',\n    justifyContent: 'space-between'\n  }}>\n      <div style={{\n      width: '75%',\n      marginRight: '25px'\n    }}>\n        <Field key={'cardNumber'} id={'cardNumber'} name={'cardNumber'} label={'Card Number'} hint={'Hint: Your Credit Card Number'} mask={'0000-0000-0000-0000'} component={FormMaskedTextBox} validator={cardValidator} />\n      </div>\n      <Field key={'cvc'} id={'cvc'} name={'cvc'} label={'CVC Number'} hint={'Hint: The last 3 digids on the back of the Card'} mask={'000'} component={FormMaskedTextBox} validator={cvcValidator} />\n    </div>\n    <Field key={'expireDate'} id={'expireDate'} name={'expireDate'} label={'Expiration Date'} component={FormDateInput} validator={requiredValidator} />\n    <Field key={'cardHolder'} id={'cardHolder'} name={'cardHolder'} label={'Card Holder Name'} component={FormInput} validator={requiredValidator} />\n  </div>;","import * as React from 'react';\nimport { FieldWrapper } from '@progress/kendo-react-form';\nexport const CardSelector = props => {\n  const {\n    value,\n    valid\n  } = props;\n  const [cardHover, setCardHover] = React.useState('');\n  const onMouseEnter = React.useCallback(event => setCardHover(event.currentTarget.getAttribute('for')), [setCardHover]);\n  const onMouseLeave = React.useCallback(() => setCardHover(''), [setCardHover]);\n  const onChange = React.useCallback(event => props.onChange({\n    value: event.currentTarget.value\n  }), [props]);\n  const filter = 'brightness(1.8) grayscale(1) opacity(.7)';\n  const filterHover = 'brightness(1.2) grayscale(.5) opacity(.9)';\n  const cardStyle = {\n    cursor: 'pointer',\n    backgroundSize: 'auto',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    display: 'inline-block',\n    width: 138,\n    height: 70,\n    border: '1px solid'\n  };\n  const visaStyle = {\n    backgroundImage: 'url(https://image.flaticon.com/icons/svg/196/196578.svg)',\n    filter: value === 'visa' ? 'none' : cardHover === 'visa' ? filterHover : filter,\n    ...cardStyle\n  };\n  const masterCardStyle = {\n    backgroundImage: 'url(https://image.flaticon.com/icons/svg/196/196561.svg)',\n    filter: value === 'masterCard' ? 'none' : cardHover === 'masterCard' ? filterHover : filter,\n    ...cardStyle\n  };\n  const paypalStyle = {\n    backgroundImage: 'url(https://image.flaticon.com/icons/svg/196/196565.svg)',\n    filter: value === 'paypal' ? 'none' : cardHover === 'paypal' ? filterHover : filter,\n    ...cardStyle\n  };\n  const inputStyles = {\n    visibility: 'hidden',\n    position: 'absolute'\n  };\n  return <FieldWrapper>\n        <label className={`k-label${valid ? '' : ' k-text-error'}`}>Payment Type</label>\n        <ul className=\"k-radio-list k-list-horizontal\">\n          <li className=\"k-radio-item\">\n            <input onChange={onChange} checked={value === 'visa'} id=\"visa\" type=\"radio\" value=\"visa\" name=\"paymentType\" style={inputStyles} />\n            <label onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} htmlFor=\"visa\" style={visaStyle} />\n          </li>\n\n          <li className=\"k-radio-item\">\n            <input onChange={onChange} checked={value === 'masterCard'} id=\"masterCard\" type=\"radio\" value=\"masterCard\" name=\"paymentType\" style={inputStyles} />\n            <label onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} htmlFor=\"masterCard\" style={masterCardStyle} />\n          </li>\n\n          <li className=\"k-radio-item\">\n            <input onChange={onChange} checked={value === 'paypal'} id=\"paypal\" type=\"radio\" value=\"paypal\" name=\"paymentType\" style={inputStyles} />\n            <label onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} htmlFor=\"paypal\" style={paypalStyle} />\n          </li>\n        </ul>\n      </FieldWrapper>;\n};","import React from 'react';\nimport logo from './logo.svg';\nimport InteractiveChart from './InteractiveChart.js';\nimport { dog_breeds } from './Data';\nimport MultiStepForm from './Form.js';\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <h1 > Bone Appétit ♥ </h1>\n      {/* <InteractiveChart\n        // nutrition={ {protein: 11, carbs: 2, fat: 2} } \n        diet={{\n          protein: { types: [\"chicken\", \"beef\", \"fish\"], quantity: [1, 2, 3] },\n          carbs: { types: [\"rice\", \"potatoes\", \"pasta\"], quantity: [1, 2, 3] },\n          fat: { types: [\"butter\", \"oil\", \"avocado\"], quantity: [1, 2, 3] }\n        }}\n      /> */}\n      <MultiStepForm />\n\n    </div>\n  );\n}\n\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\nimport Home from './Home';\nimport Data from './Data';\nimport { Routes, Route } from \"react-router-dom\";\nimport React from 'react';\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n      </Routes>\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n  <Router>\n      <App />\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}